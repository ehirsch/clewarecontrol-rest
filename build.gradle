buildscript {
	ext {
		springBootVersion = '1.3.2.RELEASE'
	}
	repositories {
		jcenter()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath 'io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE'
	}
}

plugins {
	id 'pl.allegro.tech.build.axion-release' version '1.3.4'
	id 'com.jfrog.bintray' version '1.5'
}

apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: "jacoco"

ext {
	userHome = System.properties['user.home']
}

scmVersion {
	tag {
		prefix = 'version'
	}
	repository {
		customUsername = 'ehirsch'
		customPassword = project.hasProperty('gitHubReleaseToken') ? project.property('gitHubReleaseToken') :
				System.getenv('GITHUB_RELEASE_TOKEN')
	}
}
version = scmVersion.version

//noinspection GroovyUnusedAssignment
targetCompatibility = 1.7
//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.7

repositories {
	jcenter()
}


dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-hateoas'
	compile 'org.springframework.boot:spring-boot-devtools'
	compile 'org.codehaus.groovy:groovy:2.4.+'
	compile 'org.codehaus.groovy:groovy-json:2.4.+'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'org.codehaus.groovy:groovy-test'
	testCompile 'com.jayway.jsonpath:json-path:2.1.0'
}

// make check depend on coverage
jacocoTestReport {
	reports {
		xml.enabled = true
		html.enabled = true
	}
}
check.dependsOn 'jacocoTestReport'


bintray {
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayAPIKey') ? project.property('bintrayAPIKey') : System.getenv('BINTRAY_API_KEY')
	configurations = ['archives']
	pkg {
		repo = 'maven'
		name = project.name
		licenses = ['MIT']
		vcsUrl = 'https://github.com/ehirsch/clewarecontrol-rest.git'
		//noinspection GroovyAssignabilityCheck
		version {
			name = project.version
		}
	}
}

// only publish release versions
task publish {
	onlyIf {
		-1 == version.toString().indexOf('SNAPSHOT')
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.10'
}
